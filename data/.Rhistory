geom_smooth(method = "lm", se = FALSE) +
geom_point() +
facet_wrap(~ sex)
# Check standard deviations within each group
sd(female$hgt)
sd(male$hgt)
# Check standard deviations within each group
bdims %>%
group_by(sex) %>%
summarize(sd = sd(hgt))
# Calculate and plot residuals
bdims <- bdims %>%
group_by(sex) %>%
mutate(residual = hgt - mean(hgt)) %>%
ungroup()
bdims %>%
mutate(corr_pooled_residual = quantile(residual, f, names = FALSE, type = 5)) %>%
ggplot(aes(residual, corr_pooled_residual)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point() +
facet_wrap(~ sex)
# Compute mean of each sex and the pooled standard deviation
sd(bdims$residual)
bdims %>%
group_by(sex) %>%
summarize(mean_hgt = mean(hgt))
ggplot(diamonds, aes(price)) + geom_histogram(binwidth = 1)
ggplot(diamonds, aes(price)) + geom_histogram(binwidth = 10)
ggplot(diamonds, aes(price)) + geom_histogram(binwidth = 100)
installed.packages("ggExtra")
install.packages("ggExtra")
source('~/.active-rstudio-document', echo=TRUE)
View(snp)
View(snp)
snp <- read_csv("https://datahub.io/core/s-and-p-500/r/data.csv") %>%
transmute(date = Date, price = SP500)
snp
snp <- read_csv("https://datahub.io/core/s-and-p-500/r/data.csv") %>%
transmute(date = Date, price = SP500) %>%
mutate(log_price = log10(price))
snp
year("2020-10-10")
?lubridate::year
library(lubridate)
?month
snp <- read_csv("https://datahub.io/core/s-and-p-500/r/data.csv") %>%
transmute(date = Date, price = SP500) %>%
mutate(year = year(date), month = month(date), day = day(date)) %>%
mutate(log_price = log10(price)) %>%
select(date, year, month, day, price, log_price)
ggplot(snp, aes(year, price, group = year)) +
geom_boxplot()
ggplot(snp, aes(year, log_price, group = year)) +
geom_boxplot()
ggplot(snp, aes(year, log_price, group = year)) +
)
ggplot(snp, aes(year, log_price, group = year)) +
geom_smooth(data = snp %>% group_by(year) %>% summarize(median = median(log_price)), aes(year, median), se = FALSE) +
geom_boxplot()
ggplot(snp, aes(year, price, group = year)) +
geom_smooth(data = snp %>% group_by(year) %>% summarize(median = median(price)), aes(year, median), se = FALSE) +
geom_boxplot()
ggplot(snp, aes(year, price, group = year)) +
geom_boxplot()
ggplot(snp, aes(year, log_price, group = year)) +
geom_boxplot()
library(tidyverse)
mpg %>%
group_by(drv, trans)
mpg %>%
group_by(drv, trans) %>%
summarize(prop = n()/nrow(mpg))
mpg %>%
group_by(drv, trans) %>%
summarize(prop = n()/nrow(mpg)) %>%
ggplot(aes(drv, trans, size = prop)) +
geom_point()
ggplot(mpg, aes(drv, trans)) +
geom_count()
ggplot(mpg, aes(drv, trans)) +
geom_count(aes(size = after_stat(n)/nrow(mpg)))
ggplot(mpg, aes(drv, trans)) +
geom_count(aes(size = after_stat(prop)))
ggplot(mpg, aes(drv, trans, after_stat(prop), group = 1)) +
geom_count()
ggplot(mpg, aes(drv, trans, size = after_stat(prop), group = 1)) +
geom_count()
?stat_sum
# Lab 5
ames <- read_csv("ames.csv") %>%
transmute(ames, area = Gr.Liv.Area, price = SalePrice)
library(tidyverse)
# Lab 5
ames <- read_csv("ames.csv") %>%
transmute(ames, area = Gr.Liv.Area, price = SalePrice)
setwd("~/web/teaching/data")
# Lab 5
ames <- read_csv("ames.csv") %>%
transmute(ames, area = Gr.Liv.Area, price = SalePrice)
# Lab 5
ames <- read_csv("ames.csv") %>%
transmute(area = Gr.Liv.Area, price = SalePrice)
samples_small <- tibble(size = numeric(), mean_area = numeric())
for(i in 1:100) {
samp <- slice_sample(ames, n = 50)
samples <- add_row(samples_small, size = 50, mean_area = mean(samp$area))
}
samples <- tibble(size = numeric(), mean_area = numeric())
for(i in 1:5000) {
samp <- slice_sample(ames, n = 50)
samples <- add_row(samples, size = 50, mean_area = mean(samp$area))
samp <- slice_sample(ames, n = 10)
samples <- add_row(samples, size = 10, mean_area = mean(samp$area))
samp <- slice_sample(ames, n = 100)
samples <- add_row(samples, size = 100, mean_area = mean(samp$area))
}
samples_small <- tibble(size = numeric(), mean_area = numeric())
for(i in 1:100) {
samp <- slice_sample(ames, n = 50)
samples_small <- add_row(samples_small, size = 50, mean_area = mean(samp$area))
}
samples_small
ggplot(samples, aes(mean_area)) + geom_histogram()
ggplot(samples, aes(mean_area)) +
geom_histogram(binwidth = 25) +
facet_wrap(~ size)
samples <- tibble(size = numeric(), mean_area = numeric())
for(i in 1:5000) {
samp <- slice_sample(ames, n = 50)
samples <- add_row(samples, size = 50, mean_area = mean(samp$price))
}
samples <- tibble(size = numeric(), mean_price = numeric())
for(i in 1:5000) {
samp <- slice_sample(ames, n = 50)
samples <- add_row(samples, size = 50, mean_price = mean(samp$price))
}
ggplot(samples, aes(mean_price)) +
geom_histogram()
ggplot(samples, aes(mean_price)) +
geom_histogram(bins = 100)
ggplot(samples, aes(mean_price)) +
geom_histogram(bins = 50)
mean(samples$mean_price)
samples <- tibble(size = numeric(), mean_price = numeric())
for(i in 1:5000) {
samp <- slice_sample(ames, n = 150)
samples <- add_row(samples, size = 150, mean_price = mean(samp$price))
}
ggplot(samples, aes(mean_price)) +
geom_histogram(bins = 50)
samples <- tibble(size = numeric(), mean_price = numeric())
for(i in 1:5000) {
samp <- slice_sample(ames, n = 50)
samples <- add_row(samples, size = 50, mean_price = mean(samp$price))
samp <- slice_sample(ames, n = 150)
samples <- add_row(samples, size = 150, mean_price = mean(samp$price))
}
ggplot(samples, aes(mean_price)) +
geom_histogram(bins = 50) +
facet_wrap(~ size)
samples %>% filter(size == 150) %>% pull(mean_price) %>% mean()
# Lab 6
atheism <- read_csv("atheism.csv")
atheism
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
plot(me ~ p, ylab = "Margin of Error", xlab = "Population Proportion")
?stat_function
n <- 1000
ggplot() + xlim(0,1) + stat_function(fun = function(p) {2 * sqrt(p * (1 - p)/n)})
ggplot() +
xlim(0,1) +
stat_function(fun = function(p) {2 * sqrt(p * (1 - p)/n)}) +
scale_x_continuous("Population Proportion") +
scale_y_continuous("Margin of Error")
ggplot() +
xlim(0,1) +
stat_function(fun = ~ 2 * sqrt(. * (1 - .)/n)) +
scale_x_continuous("Population Proportion") +
scale_y_continuous("Margin of Error")
View(samples)
ggplot() +
xlim(0,1) +
stat_function(fun = function(p) {2 * sqrt(p * (1 - p)/n)}) +
xlab("Population Proportion") +
scale_y_continuous("Margin of Error")
ggplot() +
xlim(0,1) +
stat_function(fun = function(p) {2 * sqrt(p * (1 - p)/n)}) +
xlab("Population Proportion") +
ylab("Margin of Error")
p_hats <- tibble(p = numeric(), n = numeric(), p_hat = numeric())
p <- 0.1
n <- 1040
for(i in 1:5000) {
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats <- add_row(p_hats, p = p, n = n, p_hats = sum(samp == "atheist")/n)
}
for(i in 1:5000) {
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats <- add_row(p_hats, p = p, n = n, p_hat = sum(samp == "atheist")/n)
}
p_hats
ggplot(p_hats, aes(p_hat)) + geom_histogram(binwidth = 0.1)
ggplot(p_hats, aes(p_hat)) + geom_histogram(binwidth = 0.01)
ggplot(p_hats, aes(p_hat)) + geom_histogram(binwidth = 0.001)
ggplot(p_hats, aes(p_hat)) + geom_histogram(binwidth = 0.005)
ggplot(p_hats, aes(p_hat)) + geom_histogram(binwidth = 0.0025)
ggplot(p_hats, aes(p_hat)) + geom_histogram(binwidth = 0.002)
n <- 400
p <- 0.1
for(i in 1:5000) {
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats <- add_row(p_hats, p = p, n = n, p_hat = sum(samp == "atheist")/n)
}
n <- 1040
p <- 0.02
for(i in 1:5000) {
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats <- add_row(p_hats, p = p, n = n, p_hat = sum(samp == "atheist")/n)
}
n <- 400
p <- 0.02
for(i in 1:5000) {
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats <- add_row(p_hats, p = p, n = n, p_hat = sum(samp == "atheist")/n)
}
ggplot(p_hats, aes(p_hat)) +
geom_histogram(binwidth = 0.002) +
facet_grid(p ~ n)
ggplot(p_hats, aes(p_hat)) +
geom_histogram(binwidth = 0.005) +
facet_grid(p ~ n)
ggplot(p_hats, aes(p_hat)) + geom_histogram(binwidth = 0.005)
p_hats <- tibble(p = numeric(), n = numeric(), p_hat = numeric())
n <- 1040
p <- 0.1
for(i in 1:5000) {
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats <- add_row(p_hats, p = p, n = n, p_hat = sum(samp == "atheist")/n)
}
ggplot(p_hats, aes(p_hat)) + geom_histogram(binwidth = 0.005)
n <- 400
p <- 0.1
for(i in 1:5000) {
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats <- add_row(p_hats, p = p, n = n, p_hat = sum(samp == "atheist")/n)
}
n <- 1040
p <- 0.02
for(i in 1:5000) {
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats <- add_row(p_hats, p = p, n = n, p_hat = sum(samp == "atheist")/n)
}
n <- 400
p <- 0.02
for(i in 1:5000) {
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats <- add_row(p_hats, p = p, n = n, p_hat = sum(samp == "atheist")/n)
}
ggplot(p_hats, aes(p_hat)) +
geom_histogram(binwidth = 0.005) +
facet_grid(p ~ n)
ggplot(p_hats, aes(p_hat)) +
geom_histogram(binwidth = 0.0025) +
facet_grid(p ~ n)
ggplot(p_hats, aes(p_hat)) +
geom_histogram(binwidth = 0.002) +
facet_grid(p ~ n)
ggplot(p_hats, aes(p_hat)) +
geom_histogram(binwidth = 0.001) +
facet_grid(p ~ n)
ggplot(p_hats, aes(p_hat)) +
geom_histogram(binwidth = 0.0025) +
facet_grid(p ~ n)
ggplot(p_hats %>% filter(p == 0.1, n == 1040), aes(p_hat)) + geom_histogram(binwidth = 0.0025)
ggplot(p_hats, aes(p_hat)) +
geom_histogram(binwidth = 0.0025) +
facet_grid(p ~ n)
# Lab 7
ames <- read_csv("ames.csv")
ames <- transmute(area = Gr.Liv.Area)
ames
View(ames)
View(ames)
ames <- transmute(ames, area = Gr.Liv.Area)
samp <- slice_sample(ames, n = 60)
ggplot(samp, aes(area)) +
geom_histogram()
ggplot(samp, aes(area)) +
geom_histogram(binwidth = 2)
ggplot(samp, aes(area)) +
geom_histogram(binwidth = 100)
ggplot(samp, aes(area)) +
geom_histogram(binwidth = 1000)
ggplot(samp, aes(area)) +
geom_histogram(binwidth = 500)
ggplot(samp, aes(area)) +
geom_histogram(binwidth = 250)
ggplot(samp, aes(area)) +
geom_histogram(binwidth = 200)
mean(samp$area)
mean(samp$area)
median(samp$area)
n <- 60
samples <- tibble(mean = numeric(), sd = numeric())
for(i in 1:50){
for(i in 1:50){
samp <- slice_sample(ames, n = n)
sampels <- add_row(samples, mean = mean(samp$area), sd = sd(samp$area))
}
samples <- mutate(lower = mean - 1.96 * sd / sqrt(n),
upper = mean + 1.96 * sd / sqrt(n))
)
samples <- mutate(samples, lower = mean - 1.96 * sd / sqrt(n),
upper = mean + 1.96 * sd / sqrt(n))
samples
samples
n <- 60
samples <- tibble(mean = numeric(), sd = numeric())
for(i in 1:50){
samp <- slice_sample(ames, n = n)
sampels <- add_row(samples, mean = mean(samp$area), sd = sd(samp$area))
}
n <- 60
samples <- tibble(mean = numeric(), sd = numeric())
for(i in 1:50){
samp <- slice_sample(ames, n = n)
samples <- add_row(samples, mean = mean(samp$area), sd = sd(samp$area))
}
samples <- mutate(samples, lower = mean - 1.96 * sd / sqrt(n),
upper = mean + 1.96 * sd / sqrt(n))
samples
?contains
samples %>%
mutate(contains = (lower < mean(ames$area) & upper > mean(ames$area)))
samples %>%
mutate(contains = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
view()
samples %>%
mutate(contains = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
ggplot(aes(x = mean, xmin = lower, xmax = upper)) +
geom_pointrange()
n <- 60
samples <- tibble(id = numeric(), mean = numeric(), sd = numeric())
for(i in 1:50){
samp <- slice_sample(ames, n = n)
samples <- add_row(samples, id = i, mean = mean(samp$area), sd = sd(samp$area))
}
samples <- mutate(samples, lower = mean - 1.96 * sd / sqrt(n),
upper = mean + 1.96 * sd / sqrt(n))
samples
samples %>%
mutate(contains = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
ggplot(aes(x = mean, y = id, xmin = lower, xmax = upper)) +
geom_pointrange()
samples %>%
mutate(contains = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
ggplot(aes(x = mean, y = id, xmin = lower, xmax = upper)) +
geom_pointrange(aes(color = contains))
samples %>%
mutate(contains_true = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
ggplot(aes(x = mean, y = id, xmin = lower, xmax = upper)) +
geom_pointrange(aes(color = contains_true))
samples %>%
mutate(contains_true = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
ggplot(aes(x = mean, y = id, xmin = lower, xmax = upper, color = contains_true)) +
geom_pointrange()
samples %>%
mutate(contains_true = betwee(mean(ames$area), lower, upper)) %>%
ggplot(aes(x = mean, y = id, xmin = lower, xmax = upper, color = contains_true)) +
geom_pointrange()
samples %>%
mutate(contains_true = between(mean(ames$area), lower, upper)) %>%
ggplot(aes(x = mean, y = id, xmin = lower, xmax = upper, color = contains_true)) +
geom_pointrange()
n <- 60
samples <- tibble(id = numeric(), mean = numeric(), sd = numeric())
for(i in 1:50){
samp <- slice_sample(ames, n = n)
samples <- add_row(samples, id = i, mean = mean(samp$area), sd = sd(samp$area))
}
samples <- mutate(samples, lower = mean - 1.96 * sd / sqrt(n),
upper = mean + 1.96 * sd / sqrt(n))
samples %>%
mutate(contains_true = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
ggplot(aes(x = mean, y = id, xmin = lower, xmax = upper, color = contains_true)) +
geom_pointrange()
samples <- mutate(samples, lower = mean - 0.674 * sd / sqrt(n),
upper = mean + 0.674 * sd / sqrt(n))
samples %>%
mutate(contains_true = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
ggplot(aes(x = mean, y = id, xmin = lower, xmax = upper, color = contains_true)) +
geom_pointrange()
samples$contains_true %>% fct_count()
samples %>%
mutate(contains_true = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
pull(contains_true) %>%
fct_count()
samples %>%
mutate(contains_true = (lower < mean(ames$area) & upper > mean(ames$area))) %>%
pull(contains_true) %>%
as_factor() %>%
fct_count()
x = c(rnorm(100, sd = 10), rnorm(10, mean = 100, sd = 10))
c(rnorm(100, sd = 10), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x, y = "x")) +
geom_boxplot()
c(rnorm(100, sd = 10), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y)) +
geom_boxplot()
c(rnorm(100, sd = 10), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = x)) +
geom_boxplot()
c(rnorm(100, sd = 50), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = x)) +
geom_boxplot()
c(rnorm(100, sd = 60), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = x)) +
geom_boxplot()
c(rnorm(1000, sd = 60), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = x)) +
geom_boxplot()
c(rnorm(1000, sd = 60), rnorm(10, mean = 100, sd = 10)) %>%
tibble()
c(rnorm(1000, sd = 60), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot()
c(rnorm(1000, sd = 50), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot()
c(rnorm(100, sd = 10), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot()
c(rnorm(100, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot()
c(rnorm(100, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot() +
scale_x_continuous(labels = "")
c(rnorm(100, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot() +
scale_x_discrete(labels = "")
c(rnorm(100, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot() +
scale_x_discrete("Boxplot of x", labels = "")
c(rnorm(100, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot() +
scale_x_discrete("")
c(rnorm(100, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot(width = 5) +
scale_x_discrete("")
c(rnorm(100, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot(width = 0.5) +
scale_x_discrete("")
c(rnorm(100, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot(width = 0.25) +
scale_x_discrete("")
c(rnorm(100, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot() +
scale_x_discrete("")
c(rnorm(100, sd = 20), rnorm(100, mean = 10, sd = 20) rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot() +
scale_x_discrete("")
c(rnorm(100, sd = 20), rnorm(100, mean = 10, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot() +
scale_x_discrete("")
c(rnorm(100, sd = 20), rnorm(100, mean = 20, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot() +
scale_x_discrete("")
c(rnorm(100, sd = 20), rnorm(50, mean = 30, sd = 20), rnorm(10, mean = 100, sd = 10)) %>%
tibble() %>%
ggplot(aes(x = "x", y = .)) +
geom_boxplot() +
scale_x_discrete("")
sqrt(0.2*0.8/1000)
sqrt(0.2*0.8/1600)
sqrt(0.25*0.75/1600)
0.05/sqrt(0.25*0.75/1600)
